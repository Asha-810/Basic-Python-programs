# -*- coding: utf-8 -*-
"""Practice python program.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14iSh8Pn4NVGYiB0EnvGuZg4y_ySgSUpE
"""

#print grades based on marks
score=int(input("enter your grade: "))

if score>=90:
    print("grade is A")
elif score>=80 and score<90:
    print("grade is B")
elif score>=70 and score<80:
    print("grade is C")
elif score>=60 and score<70:
    print("grade is D")
elif score<60 :
    print("grade is F")
else:
    print("low grade")

#odd or even
num=int(input("enter a number: "))
if num%2==0:
    print(f"The number is even :{num}")
else:
    print(f"The number is odd :{num}")

#leap year or not
num=int(input("enter a year: "))

if (num%400==0) and (num%100==0):
    print(f"{num} is a leap year")
elif(num%4==0) and (num%100 != 0):
    print(f"{num} is a leap year")
else:
     print(f"{num} is a not leap year")

#category the age

age=int(input("enter a age: "))
if age<=11:
    print("children")
elif age>11 and age<=18:
    print("teenage")
elif age>18 and age<=60:
    print("adult")
elif age>=60:
    print("old")
else:
    print("invalid age")

#maximum number
num1=int(input("enter a 1 number: "))
num2=int(input("enter a 2 number: "))
num3=int(input("enter a 3 number: "))
maxi=max(num1,num2,num3)
print(f"the maximum number is {maxi}")

# Exercise 1:
# Calculate the multiplication and sum of two numbers
# Given two integer numbers, write a Python code to return their product only if the product is equal to or lower than 1000. Othe20rwise, return their sum.

num1=20
num2=30
if (num1*num2)<=1000:
  print(f"product= {num1*num2}")
else:
  print(f"sum = {num1+num2}")

num1=40
num2=30
if (num1*num2)<=1000:
  print(f"product= {num1*num2}")
else:
  print(f"sum = {num1+num2}")

#Exercise 2: Print the Sum of a Current Number and a Previous number

for i in range(1,10):
  print(f"current number {i} previous number {i-1} sum : {i+i-1}")

#Exercise 3: Print characters present at an even index number

str=input("enter a string: ")
print(str[::2])

string=input("enter a string : ")
for i in string:
  print(i[::2])

#Exercise 4: Remove first n characters from a string

str = "PYnative"
n=int(input("enter a number: "))
if n<=len(str):
  print(str[n:])

#Exercise 5: Check if the first and last numbers of a list are the same

numbers_x = [10, 20, 30, 40, 10]
#numbers_y = [75, 65, 35, 75, 30]
if numbers_x[0]==numbers_x[-1]:
  print("result is true")

numbers_y = [75, 65, 35, 75, 30]
if numbers_y[0]==numbers_y[-1]:
  print("result is true")
else:
  print("result is false")

#Exercise 6: Display numbers divisible by 5
#Write a Python code to display numbers from a list divisible by 5

list=[10,20,33,46,55]
print("divisible by 5")
for i in list:
  if i%5==0:
    print(i)

#Exercise 7: Find the number of occurrences of a substring in a string

str_x = "Emma is good developer. Emma is a writer"
pre=str_x.count("Emma")
print(pre)

#Exercise 8: Print the following pattern
for i in range(1, 6):
    print((str(i) + " ")*i)

#Exercise 9: Check Palindrome Number
def is_palindrome(num):
    original_num = num
    reversed_num = 0
    while num > 0:
        digit = num % 10  # extract last 10 stored in digit
        reversed_num = reversed_num * 10 + digit  #find rev
        num = num // 10 #delete last num
    return original_num == reversed_num
number = 121
if is_palindrome(number):
    print(f"{number} is a palindrome")
else:
    print(f"{number} is not a palindrome")

def palindrome(num):

  return str(num)==str(num)[::-1]

number=121
if palindrome(number):
  print(f"{number} is a palindrome")
else:
  print(f"{number} is not a palindrome")

#Exercise 10: Merge two lists using the following condition

list1 = [10, 20, 25, 30, 35]
list2 = [40, 45, 60, 75, 90]
merge_list=[num for num in list1 if num%2!=0] + [num for num in list2 if num%2==0]
print(merge_list)

#Exercise 11: Get each digit from a number in the reverse order.

num="7536"
digits=[digits for digits in num[::-1]]
print(" ".join(digits))

num=7536
while num>0:
    digit=num%10
    print(digit,end=" ")
    num=num//10

#Exercise 12: Calculate income tax
income=45000
tax=0
if income<=10000:
    tax=0
elif income<=20000:
    tax =(income - 10000)* 0.10
else:
    tax=(10000*0.10)+(income -20000)*0.20
print(f"income: ${income},tax payablle: ${tax}")

def exponent(base,exp):
    return base**exp
base=2
exp=5
result=exponent(base,exp)
print(f"{base} raised to the poer of {exp} is {result}")

#Exercise 13: Print multiplication table from 1 to 10
for i in range(1,11):
  for j in range(1,11):
    print(f"{i * j:4}",end=" ")
  print()

#Exercise 14: Print a downward half-pyramid pattern of stars
n=5
for i in range(n,0,-1):
    print("*"*i)

#Exercise 15: Get an int value of base raises to the power of exponent
def exponent(base,exp):
    return base**exp
base=2
exp=5
result=exponent(base,exp)
print(f"{base} raised to the poer of {exp} is {result}")

"""CASE STUDY - 3 LOOP"""

#Exercise 1: Print first 10 natural numbers using while loop
i=1
while(i<11):
    print(i)
    i =i+1

#Exercise 2: Print the following pattern
n=5
for i in range(1,n+1):
    for j in range(1,i+1):
         print(j,end=" ")
    print()

#Exercise 3: Calculate sum of all numbers from 1 to a given number
num=int(input("enter a number: "))
add=(i for i in range(0,num+1))
print(sum(add))

#Exercise 4: Print multiplication table of a given number
num=2
for i in range(1,11):
  print(num*i)

#Exercise 5: Display numbers from a list using a loop
numbers = [12, 75, 150, 180, 145, 525, 50]
for i in numbers:
  if i>500:
    break
  if i>150:
    continue
  if i%5==0:
    print(i)

#Exercise 6: Count the total number of digits in a number
num="75869"
print(len(num))

num=75869
count=0
while num>0:
  num//=10
  count=count+1
print(count)

#Exercise 7: Print the following pattern
rows = 5
for i in range(rows, 0, -1):
    for j in range(i, 0, -1):
        print(j, end=" ")
    print()

#Exercise 8: Print list in reverse order using a loop
list1 = [10, 20, 30, 40, 50]
list2=list1[4::-1]
for i in list2:
  print(i)

#Exercise 9: Display numbers from -10 to -1 using for loop

for i in range(-10,0):
  print(i)

#Exercise 10: Display a message “Done” after the successful execution of the for loop
for i in range(5):
    print(i)
print("DONE!")

#Exercise 11: Print all prime numbers within a rangel
start = 25
end = 50

print("Prime numbers between", start, "and", end, "are:")

for num in range(start, end + 1):
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)

#Exercise 12: Display Fibonacci series up to 10 terms:
n=10
num1=0
num2=1
next_num=num2
count=1
while count<=n:
  print(next_num,end=" ")
  count+=1
  num1,num2=num2,next_num
  next_num=num1+num2
print()

#Exercise 13: Find the factorial of a given number
num = 6
factorial = 1
for i in range(1, num + 1):
    factorial *= i
print(f"The factorial of {num} is {factorial}")

#Exercise 14: Reverse a integer number
num=76542
while num>0:
    digit=num%10
    print(digit,end=" ")
    num=num//10

#Exercise 15: Print elements from a given list present at odd index positions
my_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
for i in range(1,len(my_list),2):
  print(my_list[i],end=" ")

#Exercise 16: Calculate the cube of all numbers from 1 to a given number
input_number = 6
for i in range(1,input_number):
  cube=i*i*i
  print(f"current number is {i} Cube of this number is {cube}")

#Exercise 17: Find the sum of the series up to n terms
n = 5
sum=0
for i in range(1,n+1):
  sum=sum+int('2'*i)
print(f"sum of {n} is {sum}")

#Exercise 18: Print the following pattern
n=5
for i in range(1,n):
  for j in range(1,i+1):
    print("*",end=" ")
  print()
for k in range(n,0,-1):
  for l in range(1,k+1):
    print("*",end=" ")
  print("\r")

